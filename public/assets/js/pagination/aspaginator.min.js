!function (document, window, $) {
    "use strict";
    jQuery("#custom").asPaginator(100, {
        namespace: "pagination",
        currentPage: 1,
        itemsPerPage: 10,
        disabledClass: "disabled",
        activeClass: "active",
        visibleNum: {
            0: 3,
            480: 5
        },
        tpl: function () {
            return "{{prev}}{{lists}}{{next}}"
        },
        components: {
            prev: {
                tpl: function () {
                    return '<li class="' + this.namespace + '-prev"><a href="javascript:void(0)"><span class="arrow_carrot-left"></span></a></li>'
                }
            },
            next: {
                tpl: function () {
                    return '<li class="' + this.namespace + '-next"><a href="javascript:void(0)"><span class="arrow_carrot-right"></span></a></li>'
                }
            },
            lists: {
                tpl: function () {
                    var lists = "",
                            remainder = this.currentPage >= this.visible ? this.currentPage % this.visible : this.currentPage;
                    remainder = 0 === remainder ? this.visible : remainder;
                    for (var k = 1; remainder > k; k++)
                        lists += '<li class="' + this.namespace + '-items" data-value="' + (this.currentPage - remainder + k) + '"><a href="javascript:void(0)">' + (this.currentPage - remainder + k) + "</a></li>";
                    lists += '<li class="' + this.namespace + "-items " + this.classes.active + '" data-value="' + this.currentPage + '"><a href="javascript:void(0)">' + this.currentPage + "</a></li>";
                    for (var i = this.currentPage + 1, limit = i + this.visible - remainder - 1 > this.totalPages ? this.totalPages : i + this.visible - remainder - 1; limit >= i; i++)
                        lists += '<li class="' + this.namespace + '-items" data-value="' + i + '"><a href="javascript:void(0)">' + i + "</a></li>";
                    return lists
                }
            }
        }
    });
    jQuery("#pagination-gap").asPaginator(100, {
        namespace: "pagination",
        currentPage: 1,
        itemsPerPage: 10,
        disabledClass: "disabled",
        activeClass: "active",
        skin : "pagination-gap",
        total:"50",
        visibleNum: {
            0: 3,
            480: 5
        },
        tpl: function () {
            return "{{prev}}{{lists}}{{next}}"
        },
        components: {
            prev: {
                tpl: function () {
                    return '<li class="' + this.namespace + '-prev"><a href="javascript:void(0)"><span class="arrow_carrot-left"></span></a></li>'
                }
            },
            next: {
                tpl: function () {
                    return '<li class="' + this.namespace + '-next"><a href="javascript:void(0)"><span class="arrow_carrot-right"></span></a></li>'
                }
            },
            lists: {
                tpl: function () {
                    var lists = "",
                            remainder = this.currentPage >= this.visible ? this.currentPage % this.visible : this.currentPage;
                    remainder = 0 === remainder ? this.visible : remainder;
                    for (var k = 1; remainder > k; k++)
                        lists += '<li class="' + this.namespace + '-items" data-value="' + (this.currentPage - remainder + k) + '"><a href="javascript:void(0)">' + (this.currentPage - remainder + k) + "</a></li>";
                    lists += '<li class="' + this.namespace + "-items " + this.classes.active + '" data-value="' + this.currentPage + '"><a href="javascript:void(0)">' + this.currentPage + "</a></li>";
                    for (var i = this.currentPage + 1, limit = i + this.visible - remainder - 1 > this.totalPages ? this.totalPages : i + this.visible - remainder - 1; limit >= i; i++)
                        lists += '<li class="' + this.namespace + '-items" data-value="' + i + '"><a href="javascript:void(0)">' + i + "</a></li>";
                    return lists
                }
            }
        }
    });
    jQuery("#pagination-lg").asPaginator(100, {
        namespace: "pagination",
        currentPage: 1,
        itemsPerPage: 10,
        disabledClass: "disabled",
        activeClass: "active",
        skin : "pagination-lg pagination-gap",
        total:"50",
        visibleNum: {
            0: 3,
            480: 5
        },
        tpl: function () {
            return "{{prev}}{{lists}}{{next}}"
        },
        components: {
            prev: {
                tpl: function () {
                    return '<li class="' + this.namespace + '-prev"><a href="javascript:void(0)"><span class="arrow_carrot-left"></span></a></li>'
                }
            },
            next: {
                tpl: function () {
                    return '<li class="' + this.namespace + '-next"><a href="javascript:void(0)"><span class="arrow_carrot-right"></span></a></li>'
                }
            },
            lists: {
                tpl: function () {
                    var lists = "",
                            remainder = this.currentPage >= this.visible ? this.currentPage % this.visible : this.currentPage;
                    remainder = 0 === remainder ? this.visible : remainder;
                    for (var k = 1; remainder > k; k++)
                        lists += '<li class="' + this.namespace + '-items" data-value="' + (this.currentPage - remainder + k) + '"><a href="javascript:void(0)">' + (this.currentPage - remainder + k) + "</a></li>";
                    lists += '<li class="' + this.namespace + "-items " + this.classes.active + '" data-value="' + this.currentPage + '"><a href="javascript:void(0)">' + this.currentPage + "</a></li>";
                    for (var i = this.currentPage + 1, limit = i + this.visible - remainder - 1 > this.totalPages ? this.totalPages : i + this.visible - remainder - 1; limit >= i; i++)
                        lists += '<li class="' + this.namespace + '-items" data-value="' + i + '"><a href="javascript:void(0)">' + i + "</a></li>";
                    return lists
                }
            }
        }
    });
    jQuery("#pagination-md").asPaginator(100, {
        namespace: "pagination",
        currentPage: 1,
        itemsPerPage: 10,
        disabledClass: "disabled",
        activeClass: "active",
        skin : "pagination-gap",
        total:"50",
        visibleNum: {
            0: 3,
            480: 5
        },
        tpl: function () {
            return "{{prev}}{{lists}}{{next}}"
        },
        components: {
            prev: {
                tpl: function () {
                    return '<li class="' + this.namespace + '-prev"><a href="javascript:void(0)"><span class="arrow_carrot-left"></span></a></li>'
                }
            },
            next: {
                tpl: function () {
                    return '<li class="' + this.namespace + '-next"><a href="javascript:void(0)"><span class="arrow_carrot-right"></span></a></li>'
                }
            },
            lists: {
                tpl: function () {
                    var lists = "",
                            remainder = this.currentPage >= this.visible ? this.currentPage % this.visible : this.currentPage;
                    remainder = 0 === remainder ? this.visible : remainder;
                    for (var k = 1; remainder > k; k++)
                        lists += '<li class="' + this.namespace + '-items" data-value="' + (this.currentPage - remainder + k) + '"><a href="javascript:void(0)">' + (this.currentPage - remainder + k) + "</a></li>";
                    lists += '<li class="' + this.namespace + "-items " + this.classes.active + '" data-value="' + this.currentPage + '"><a href="javascript:void(0)">' + this.currentPage + "</a></li>";
                    for (var i = this.currentPage + 1, limit = i + this.visible - remainder - 1 > this.totalPages ? this.totalPages : i + this.visible - remainder - 1; limit >= i; i++)
                        lists += '<li class="' + this.namespace + '-items" data-value="' + i + '"><a href="javascript:void(0)">' + i + "</a></li>";
                    return lists
                }
            }
        }
    });
    jQuery("#pagination-sm").asPaginator(100, {
        namespace: "pagination",
        currentPage: 1,
        itemsPerPage: 10,
        disabledClass: "disabled",
        activeClass: "active",
        skin : "pagination-sm pagination-gap",
        total:"50",
        visibleNum: {
            0: 3,
            480: 5
        },
        tpl: function () {
            return "{{prev}}{{lists}}{{next}}"
        },
        components: {
            prev: {
                tpl: function () {
                    return '<li class="' + this.namespace + '-prev"><a href="javascript:void(0)"><span class="arrow_carrot-left"></span></a></li>'
                }
            },
            next: {
                tpl: function () {
                    return '<li class="' + this.namespace + '-next"><a href="javascript:void(0)"><span class="arrow_carrot-right"></span></a></li>'
                }
            },
            lists: {
                tpl: function () {
                    var lists = "",
                            remainder = this.currentPage >= this.visible ? this.currentPage % this.visible : this.currentPage;
                    remainder = 0 === remainder ? this.visible : remainder;
                    for (var k = 1; remainder > k; k++)
                        lists += '<li class="' + this.namespace + '-items" data-value="' + (this.currentPage - remainder + k) + '"><a href="javascript:void(0)">' + (this.currentPage - remainder + k) + "</a></li>";
                    lists += '<li class="' + this.namespace + "-items " + this.classes.active + '" data-value="' + this.currentPage + '"><a href="javascript:void(0)">' + this.currentPage + "</a></li>";
                    for (var i = this.currentPage + 1, limit = i + this.visible - remainder - 1 > this.totalPages ? this.totalPages : i + this.visible - remainder - 1; limit >= i; i++)
                        lists += '<li class="' + this.namespace + '-items" data-value="' + i + '"><a href="javascript:void(0)">' + i + "</a></li>";
                    return lists
                }
            }
        }
    });
    jQuery("#pagination-no-border").asPaginator(100, {
        namespace: "pagination",
        currentPage: 1,
        itemsPerPage: 10,
        disabledClass: "disabled",
        activeClass: "active",
        skin : "pagination-no-border",
        total:"50",
        visibleNum: {
            0: 3,
            480: 5
        },
        tpl: function () {
            return "{{prev}}{{lists}}{{next}}"
        },
        components: {
            prev: {
                tpl: function () {
                    return '<li class="' + this.namespace + '-prev"><a href="javascript:void(0)"><span class="arrow_carrot-left"></span></a></li>'
                }
            },
            next: {
                tpl: function () {
                    return '<li class="' + this.namespace + '-next"><a href="javascript:void(0)"><span class="arrow_carrot-right"></span></a></li>'
                }
            },
            lists: {
                tpl: function () {
                    var lists = "",
                            remainder = this.currentPage >= this.visible ? this.currentPage % this.visible : this.currentPage;
                    remainder = 0 === remainder ? this.visible : remainder;
                    for (var k = 1; remainder > k; k++)
                        lists += '<li class="' + this.namespace + '-items" data-value="' + (this.currentPage - remainder + k) + '"><a href="javascript:void(0)">' + (this.currentPage - remainder + k) + "</a></li>";
                    lists += '<li class="' + this.namespace + "-items " + this.classes.active + '" data-value="' + this.currentPage + '"><a href="javascript:void(0)">' + this.currentPage + "</a></li>";
                    for (var i = this.currentPage + 1, limit = i + this.visible - remainder - 1 > this.totalPages ? this.totalPages : i + this.visible - remainder - 1; limit >= i; i++)
                        lists += '<li class="' + this.namespace + '-items" data-value="' + i + '"><a href="javascript:void(0)">' + i + "</a></li>";
                    return lists
                }
            }
        }
    });
}(window, document, jQuery);