(function ($, window) {
    "use strict";
    // Add a new validator
    $.formUtils.addValidator({
        name: 'even_number',
        validatorFunction: function (value, $el, config, language, $form) {
            return parseInt(value, 10) % 2 === 0;
        },
        borderColorOnError: '',
        errorMessage: 'You have to give an even number',
        errorMessageKey: 'badEvenNumber',
    });

    window.applyValidation = function (validateOnBlur, forms, messagePosition, xtraModule) {
        if (!forms)
            forms = 'form';
        if (!messagePosition)
            messagePosition = 'top';

        $.validate({
            form: forms,
            language: {
                requiredFields: 'The Name is required and cannot be empty'
            },
            validateOnBlur: validateOnBlur,
            errorMessagePosition: messagePosition,
            scrollToTopOnError: true,
            lang: 'sv',
            sanitizeAll: 'trim', // only used on form C
            // borderColorOnError : 'purple',
            modules: 'security, location, sweden, file,' +
                    ' uk, brazil poland' + (xtraModule ? ',' + xtraModule : ''),
            onModulesLoaded: function () {
                $('#country-suggestions').suggestCountry();
                $('#swedish-county-suggestions').suggestSwedishCounty();
                $('#password').displayPasswordStrength();
            },
            onValidate: function ($f) {

                console.log('about to validate form ' + $f.attr('id'));

                var $callbackInput = $('#callback');
                if ($callbackInput.val() == 1) {
                    return {
                        element: $callbackInput,
                        message: 'This validation was made in a callback'
                    };
                }
            }
        });
    };

    //window.applyValidation(true, '#add-card', 'element');

    //window.applyValidation(true, '#form-a', 'top');
    //window.applyValidation(false, '#form-b', 'element');
    //$('#text-area').restrictLength($('#max-len'));
    // Load one module outside $.validate() even though you do not have to
    $.formUtils.loadModules('date', false, false);

    $('input')
            .on('beforeValidation', function () {
                console.log('About to validate input "' + this.name + '"');
            })
            .on('validation', function (evt, isValid) {
                var validationResult = '';
                if (isValid === null) {
                    validationResult = 'not validated';
                } else if (isValid) {
                    validationResult = 'VALID';
                } else {
                    validationResult = 'INVALID';
                }
                console.log('Input ' + this.name + ' is ' + validationResult);
            });

})(jQuery, window);