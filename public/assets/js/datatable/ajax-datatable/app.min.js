jQuery(document).on('ready',function () {
    "use strict";
    App.init();
});

var App = function () {
    var a, b = !1, c = !1, d = !1, e = !1, f = [], g = "../assets/", h = "images/", i = "global/plugins/", j = "global/css/", k = {
        blue: "#89C4F4",
        red: "#F3565D",
        green: "#1bbc9b",
        purple: "#9b59b6",
        grey: "#95a5a6",
        yellow: "#F8CB00"
    }, l = function () {
        "rtl" === $("body").css("direction") && (b = !0), c = !!navigator.userAgent.match(/MSIE 8.0/),
                d = !!navigator.userAgent.match(/MSIE 9.0/), e = !!navigator.userAgent.match(/MSIE 10.0/),
                e && $("html").addClass("ie10"), (e || d || c) && $("html").addClass("ie");
    }, m = function () {
        for (var a = 0; a < f.length; a++) {
            var b = f[a];
            b.call();
        }
    }, n = function () {
        var a;
        if (c) {
            var b;
            $(window).resize(function () {
                b != document.documentElement.clientHeight && (a && clearTimeout(a), a = setTimeout(function () {
                    m();
                }, 50), b = document.documentElement.clientHeight);
            });
        } else
            $(window).resize(function () {
                a && clearTimeout(a), a = setTimeout(function () {
                    m();
                }, 50);
            });
    }, o = function () {
        $("body").on("click", ".portlet > .portlet-title > .tools > a.remove", function (a) {
            a.preventDefault();
            var b = $(this).closest(".portlet");
            $("body").hasClass("page-portlet-fullscreen") && $("body").removeClass("page-portlet-fullscreen"),
                    b.find(".portlet-title .fullscreen").tooltip("destroy"), b.find(".portlet-title > .tools > .reload").tooltip("destroy"),
                    b.find(".portlet-title > .tools > .remove").tooltip("destroy"), b.find(".portlet-title > .tools > .config").tooltip("destroy"),
                    b.find(".portlet-title > .tools > .collapse, .portlet > .portlet-title > .tools > .expand").tooltip("destroy"),
                    b.remove();
        }), $("body").on("click", ".portlet > .portlet-title .fullscreen", function (a) {
            a.preventDefault();
            var b = $(this).closest(".portlet");
            if (b.hasClass("portlet-fullscreen"))
                $(this).removeClass("on"), b.removeClass("portlet-fullscreen"),
                        $("body").removeClass("page-portlet-fullscreen"), b.children(".portlet-body").css("height", "auto");
            else {
                var c = App.getViewPort().height - b.children(".portlet-title").outerHeight() - parseInt(b.children(".portlet-body").css("padding-top")) - parseInt(b.children(".portlet-body").css("padding-bottom"));
                $(this).addClass("on"), b.addClass("portlet-fullscreen"), $("body").addClass("page-portlet-fullscreen"),
                        b.children(".portlet-body").css("height", c);
            }
        }), $("body").on("click", ".portlet > .portlet-title > .tools > a.reload", function (a) {
            a.preventDefault();
            var b = $(this).closest(".portlet").children(".portlet-body"), c = $(this).attr("data-url"), d = $(this).attr("data-error-display");
            c ? (App.blockUI({
                target: b,
                animate: !0,
                overlayColor: "none"
            }), $.ajax({
                type: "GET",
                cache: !1,
                url: c,
                dataType: "html",
                success: function (a) {
                    App.unblockUI(b), b.html(a), App.initAjax();
                },
                error: function (a, c, e) {
                    App.unblockUI(b);
                    var f = "Error on reloading the content. Please check your connection and try again.";
                    "toastr" == d && toastr ? toastr.error(f) : "notific8" == d && $.notific8 ? ($.notific8("zindex", 11500),
                            $.notific8(f, {
                                theme: "ruby",
                                life: 3e3
                            })) : alert(f);
                }
            })) : (App.blockUI({
                target: b,
                animate: !0,
                overlayColor: "none"
            }), window.setTimeout(function () {
                App.unblockUI(b);
            }, 1e3));
        }), $('.portlet .portlet-title a.reload[data-load="true"]').click(), $("body").on("click", ".portlet > .portlet-title > .tools > .collapse, .portlet .portlet-title > .tools > .expand", function (a) {
            a.preventDefault();
            var b = $(this).closest(".portlet").children(".portlet-body");
            $(this).hasClass("collapse") ? ($(this).removeClass("collapse").addClass("expand"),
                    b.slideUp(200)) : ($(this).removeClass("expand").addClass("collapse"), b.slideDown(200));
        });
    }, p = function () {
        if ($("body").on("click", ".md-checkbox > label, .md-radio > label", function () {
            var a = $(this), b = $(this).children("span:first-child");
            b.addClass("inc");
            var c = b.clone(!0);
            b.before(c), $("." + b.attr("class") + ":last", a).remove();
        }), $("body").hasClass("page-md")) {
            var a, b, c, d, e;
            $("body").on("click", "a.btn, button.btn, input.btn, label.btn", function (f) {
                a = $(this), 0 == a.find(".md-click-circle").length && a.prepend("<span class='md-click-circle'></span>"),
                        b = a.find(".md-click-circle"), b.removeClass("md-click-animate"), b.height() || b.width() || (c = Math.max(a.outerWidth(), a.outerHeight()),
                        b.css({
                            height: c,
                            width: c
                        })), d = f.pageX - a.offset().left - b.width() / 2, e = f.pageY - a.offset().top - b.height() / 2,
                        b.css({
                            top: e + "px",
                            left: d + "px"
                        }).addClass("md-click-animate"), setTimeout(function () {
                    b.remove();
                }, 1e3);
            });
        }
        var f = function (a) {
            "" != a.val() ? a.addClass("edited") : a.removeClass("edited");
        };
        $("body").on("keydown", ".form-md-floating-label .form-control", function (a) {
            f($(this));
        }), $("body").on("blur", ".form-md-floating-label .form-control", function (a) {
            f($(this));
        }), $(".form-md-floating-label .form-control").each(function () {
            $(this).val().length > 0 && $(this).addClass("edited");
        });
    }, q = function () {
        $().iCheck && $(".icheck").each(function () {
            var a = $(this).attr("data-checkbox") ? $(this).attr("data-checkbox") : "icheckbox_minimal-grey", b = $(this).attr("data-radio") ? $(this).attr("data-radio") : "iradio_minimal-grey";
            a.indexOf("_line") > -1 || b.indexOf("_line") > -1 ? $(this).iCheck({
                checkboxClass: a,
                radioClass: b,
                insert: '<div class="icheck_line-icon"></div>' + $(this).attr("data-label")
            }) : $(this).iCheck({
                checkboxClass: a,
                radioClass: b
            });
        });
    }, r = function () {
        $().bootstrapSwitch && $(".make-switch").bootstrapSwitch();
    }, s = function () {
        $().confirmation && $("[data-toggle=confirmation]").confirmation({
            btnOkClass: "btn btn-sm btn-success",
            btnCancelClass: "btn btn-sm btn-danger"
        });
    }, t = function () {
        $("body").on("shown.bs.collapse", ".accordion.scrollable", function (a) {
            App.scrollTo($(a.target));
        });
    }, u = function () {
        if (encodeURI(location.hash)) {
            var a = encodeURI(location.hash.substr(1));
            $('a[href="#' + a + '"]').parents(".tab-pane:hidden").each(function () {
                var a = $(this).attr("id");
                $('a[href="#' + a + '"]').click();
            }), $('a[href="#' + a + '"]').click();
        }
        $().tabdrop && $(".tabbable-tabdrop .nav-pills, .tabbable-tabdrop .nav-tabs").tabdrop({
            text: '<i class="fa fa-ellipsis-v"></i>&nbsp;<i class="fa fa-angle-down"></i>'
        });
    }, v = function () {
        $("body").on("hide.bs.modal", function () {
            $(".modal:visible").size() > 1 && $("html").hasClass("modal-open") === !1 ? $("html").addClass("modal-open") : $(".modal:visible").size() <= 1 && $("html").removeClass("modal-open");
        }), $("body").on("show.bs.modal", ".modal", function () {
            $(this).hasClass("modal-scroll") && $("body").addClass("modal-open-noscroll");
        }), $("body").on("hidden.bs.modal", ".modal", function () {
            $("body").removeClass("modal-open-noscroll");
        }), $("body").on("hidden.bs.modal", ".modal:not(.modal-cached)", function () {
            $(this).removeData("bs.modal");
        });
    }, w = function () {
        $(".tooltips").tooltip(), $(".portlet > .portlet-title .fullscreen").tooltip({
            trigger: "hover",
            container: "body",
            title: "Fullscreen"
        }), $(".portlet > .portlet-title > .tools > .reload").tooltip({
            trigger: "hover",
            container: "body",
            title: "Reload"
        }), $(".portlet > .portlet-title > .tools > .remove").tooltip({
            trigger: "hover",
            container: "body",
            title: "Remove"
        }), $(".portlet > .portlet-title > .tools > .config").tooltip({
            trigger: "hover",
            container: "body",
            title: "Settings"
        }), $(".portlet > .portlet-title > .tools > .collapse, .portlet > .portlet-title > .tools > .expand").tooltip({
            trigger: "hover",
            container: "body",
            title: "Collapse/Expand"
        });
    }, x = function () {
        $("body").on("click", ".dropdown-menu.hold-on-click", function (a) {
            a.stopPropagation();
        });
    }, y = function () {
        $("body").on("click", '[data-close="alert"]', function (a) {
            $(this).parent(".alert").hide(), $(this).closest(".note").hide(), a.preventDefault();
        }), $("body").on("click", '[data-close="note"]', function (a) {
            $(this).closest(".note").hide(), a.preventDefault();
        }), $("body").on("click", '[data-remove="note"]', function (a) {
            $(this).closest(".note").remove(), a.preventDefault();
        });
    }, z = function () {
        $('[data-hover="dropdown"]').not(".hover-initialized").each(function () {
            $(this).dropdownHover(), $(this).addClass("hover-initialized");
        });
    }, A = function () {
        "function" == typeof autosize && autosize(document.querySelector("textarea.autosizeme"));
    }, B = function () {
        $(".popovers").popover(), $(document).on("click.bs.popover.data-api", function (b) {
            a && a.popover("hide");
        });
    }, C = function () {
        App.initSlimScroll(".scroller");
    }, D = function () {
        jQuery.fancybox && $(".fancybox-button").size() > 0 && $(".fancybox-button").fancybox({
            groupAttr: "data-rel",
            prevEffect: "none",
            nextEffect: "none",
            closeBtn: !0,
            helpers: {
                title: {
                    type: "inside"
                }
            }
        });
    }, E = function () {
        $().counterUp && $("[data-counter='counterup']").counterUp({
            delay: 10,
            time: 1e3
        });
    }, F = function () {
        (c || d) && $("input[placeholder]:not(.placeholder-no-fix), textarea[placeholder]:not(.placeholder-no-fix)").each(function () {
            var a = $(this);
            "" === a.val() && "" !== a.attr("placeholder") && a.addClass("placeholder").val(a.attr("placeholder")),
                    a.focus(function () {
                        a.val() == a.attr("placeholder") && a.val("");
                    }), a.blur(function () {
                "" !== a.val() && a.val() != a.attr("placeholder") || a.val(a.attr("placeholder"));
            });
        });
    }, G = function () {
        $().select2 && ($.fn.select2.defaults.set("theme", "bootstrap"), $(".select2me").select2({
            placeholder: "Select",
            width: "auto",
            allowClear: !0
        }));
    }, H = function () {
        $("[data-auto-height]").each(function () {
            var a = $(this), b = $("[data-height]", a), c = 0, d = a.attr("data-mode"), e = parseInt(a.attr("data-offset") ? a.attr("data-offset") : 0);
            b.each(function () {
                "height" == $(this).attr("data-height") ? $(this).css("height", "") : $(this).css("min-height", "");
                var a = "base-height" == d ? $(this).outerHeight() : $(this).outerHeight(!0);
                a > c && (c = a);
            }), c += e, b.each(function () {
                "height" == $(this).attr("data-height") ? $(this).css("height", c) : $(this).css("min-height", c);
            }), a.attr("data-related") && $(a.attr("data-related")).css("height", a.height());
        });
    };
    return {
        init: function () {
            l(), n(), p(), q(), r(), C(), D(), G(), o(), y(), x(), u(), w(), B(), t(), v(),
                    s(), A(), E(), this.addResizeHandler(H), F();
        },
        initAjax: function () {
            q(), r(), z(), C(), G(), D(), x(), w(), B(), t(), s();
        },
        initComponents: function () {
            this.initAjax();
        },
        setLastPopedPopover: function (b) {
            a = b;
        },
        addResizeHandler: function (a) {
            f.push(a);
        },
        runResizeHandlers: function () {
            m();
        },
        scrollTo: function (a, b) {
            var c = a && a.size() > 0 ? a.offset().top : 0;
            a && ($("body").hasClass("page-header-fixed") ? c -= $(".page-header").height() : $("body").hasClass("page-header-top-fixed") ? c -= $(".page-header-top").height() : $("body").hasClass("page-header-menu-fixed") && (c -= $(".page-header-menu").height()),
                    c += b ? b : -1 * a.height()), $("html,body").animate({
                scrollTop: c
            }, "slow");
        },
        initSlimScroll: function (a) {
            $().slimScroll && $(a).each(function () {
                if (!$(this).attr("data-initialized")) {
                    var a;
                    a = $(this).attr("data-height") ? $(this).attr("data-height") : $(this).css("height"),
                            $(this).slimScroll({
                        allowPageScroll: !0,
                        size: "7px",
                        color: $(this).attr("data-handle-color") ? $(this).attr("data-handle-color") : "#bbb",
                        wrapperClass: $(this).attr("data-wrapper-class") ? $(this).attr("data-wrapper-class") : "slimScrollDiv",
                        railColor: $(this).attr("data-rail-color") ? $(this).attr("data-rail-color") : "#eaeaea",
                        position: b ? "left" : "right",
                        height: a,
                        alwaysVisible: "1" == $(this).attr("data-always-visible"),
                        railVisible: "1" == $(this).attr("data-rail-visible"),
                        disableFadeOut: !0
                    }), $(this).attr("data-initialized", "1");
                }
            });
        },
        destroySlimScroll: function (a) {
            $().slimScroll && $(a).each(function () {
                if ("1" === $(this).attr("data-initialized")) {
                    $(this).removeAttr("data-initialized"), $(this).removeAttr("style");
                    var a = {};
                    $(this).attr("data-handle-color") && (a["data-handle-color"] = $(this).attr("data-handle-color")),
                            $(this).attr("data-wrapper-class") && (a["data-wrapper-class"] = $(this).attr("data-wrapper-class")),
                            $(this).attr("data-rail-color") && (a["data-rail-color"] = $(this).attr("data-rail-color")),
                            $(this).attr("data-always-visible") && (a["data-always-visible"] = $(this).attr("data-always-visible")),
                            $(this).attr("data-rail-visible") && (a["data-rail-visible"] = $(this).attr("data-rail-visible")),
                            $(this).slimScroll({
                        wrapperClass: $(this).attr("data-wrapper-class") ? $(this).attr("data-wrapper-class") : "slimScrollDiv",
                        destroy: !0
                    });
                    var b = $(this);
                    $.each(a, function (a, c) {
                        b.attr(a, c);
                    });
                }
            });
        },
        scrollTop: function () {
            App.scrollTo();
        },
        blockUI: function (a) {
            a = $.extend(!0, {}, a);
            var b = "";
            if (b = a.animate ? '<div class="loading-message ' + (a.boxed ? "loading-message-boxed" : "") + '"><div class="block-spinner-bar"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div></div>' : a.iconOnly ? '<div class="loading-message ' + (a.boxed ? "loading-message-boxed" : "") + '"><img src="' + this.getGlobalImgPath() + 'loading-spinner-grey.gif" align=""></div>' : a.textOnly ? '<div class="loading-message ' + (a.boxed ? "loading-message-boxed" : "") + '"><span>&nbsp;&nbsp;' + (a.message ? a.message : "LOADING...") + "</span></div>" : '<div class="loading-message ' + (a.boxed ? "loading-message-boxed" : "") + '"><img src="' + this.getGlobalImgPath() + 'spiffygif.gif" align=""><span>&nbsp;&nbsp;' + (a.message ? a.message : "LOADING...") + "</span></div>",
                    a.target) {
                var c = $(a.target);
                c.height() <= $(window).height() && (a.cenrerY = !0), c.block({
                    message: b,
                    baseZ: a.zIndex ? a.zIndex : 1e3,
                    centerY: void 0 !== a.cenrerY ? a.cenrerY : !1,
                    css: {
                        top: "10%",
                        border: "0",
                        padding: "0",
                        backgroundColor: "none"
                    },
                    overlayCSS: {
                        backgroundColor: a.overlayColor ? a.overlayColor : "#555",
                        opacity: a.boxed ? .05 : .1,
                        cursor: "wait"
                    }
                });
            } else
                $.blockUI({
                    message: b,
                    baseZ: a.zIndex ? a.zIndex : 1e3,
                    css: {
                        border: "0",
                        padding: "0",
                        backgroundColor: "none"
                    },
                    overlayCSS: {
                        backgroundColor: a.overlayColor ? a.overlayColor : "#555",
                        opacity: a.boxed ? .05 : .1,
                        cursor: "wait"
                    }
                });
        },
        unblockUI: function (a) {
            a ? $(a).unblock({
                onUnblock: function () {
                    $(a).css("position", ""), $(a).css("zoom", "");
                }
            }) : $.unblockUI();
        },
        startPageLoading: function (a) {
            a && a.animate ? ($(".page-spinner-bar").remove(), $("body").append('<div class="page-spinner-bar"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div>')) : ($(".page-loading").remove(),
                    $("body").append('<div class="page-loading"><img src="' + this.getGlobalImgPath() + 'loading-spinner-grey.gif"/>&nbsp;&nbsp;<span>' + (a && a.message ? a.message : "Loading...") + "</span></div>"));
        },
        stopPageLoading: function () {
            $(".page-loading, .page-spinner-bar").remove();
        },
        alert: function (a) {
            a = $.extend(!0, {
                container: "",
                place: "append",
                type: "success",
                message: "",
                close: !0,
                reset: !0,
                focus: !0,
                closeInSeconds: 0,
                icon: ""
            }, a);
            var b = App.getUniqueID("App_alert"), c = '<div id="' + b + '" class="custom-alerts alert alert-' + a.type + ' fade in">' + (a.close ? '<button type="button" class="close" data-dismiss="alert" aria-hidden="true"></button>' : "") + ("" !== a.icon ? '<i class="fa-lg fa fa-' + a.icon + '"></i>  ' : "") + a.message + "</div>";
            return a.reset && $(".custom-alerts").remove(), a.container ? "append" == a.place ? $(a.container).append(c) : $(a.container).prepend(c) : 1 === $(".page-fixed-main-content").size() ? $(".page-fixed-main-content").prepend(c) : ($("body").hasClass("page-container-bg-solid") || $("body").hasClass("page-content-white")) && 0 === $(".page-head").size() ? $(".page-title").after(c) : $(".page-bar").size() > 0 ? $(".page-bar").after(c) : $(".page-breadcrumb, .breadcrumbs").after(c),
                    a.focus && App.scrollTo($("#" + b)), a.closeInSeconds > 0 && setTimeout(function () {
                $("#" + b).remove();
            }, 1e3 * a.closeInSeconds), b;
        },
        initFancybox: function () {
            D();
        },
        getActualVal: function (a) {
            return a = $(a), a.val() === a.attr("placeholder") ? "" : a.val();
        },
        getURLParameter: function (a) {
            var b, c, d = window.location.search.substring(1), e = d.split("&");
            for (b = 0; b < e.length; b++)
                if (c = e[b].split("="), c[0] == a)
                    return unescape(c[1]);
            return null;
        },
        isTouchDevice: function () {
            try {
                return document.createEvent("TouchEvent"), !0;
            } catch (a) {
                return !1;
            }
        },
        getViewPort: function () {
            var a = window, b = "inner";
            return "innerWidth" in window || (b = "client", a = document.documentElement || document.body),
                    {
                        width: a[b + "Width"],
                        height: a[b + "Height"]
                    };
        },
        getUniqueID: function (a) {
            return "prefix_" + Math.floor(Math.random() * new Date().getTime());
        },
        isIE8: function () {
            return c;
        },
        isIE9: function () {
            return d;
        },
        isRTL: function () {
            return b;
        },
        isAngularJsApp: function () {
            return "undefined" != typeof angular;
        },
        getAssetsPath: function () {
            return g;
        },
        setAssetsPath: function (a) {
            g = a;
        },
        setGlobalImgPath: function (a) {
            h = a;
        },
        getGlobalImgPath: function () {
            return g + h;
        },
        setGlobalPluginsPath: function (a) {
            i = a;
        },
        getGlobalPluginsPath: function () {
            return g + i;
        },
        getGlobalCssPath: function () {
            return g + j;
        },
        getBrandColor: function (a) {
            return k[a] ? k[a] : "";
        },
        getResponsiveBreakpoint: function (a) {
            var b = {
                xs: 480,
                sm: 768,
                md: 992,
                lg: 1200
            };
            return b[a] ? b[a] : 0;
        }
    };
}();
