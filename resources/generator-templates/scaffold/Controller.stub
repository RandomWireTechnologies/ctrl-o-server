<?php 

namespace $NAMESPACE_CONTROLLER$;

use Flash;
use $NAMESPACE_MODEL$\$MODEL_NAME$;
use $NAMESPACE_REQUEST$\Create$MODEL_NAME$Request;
use $NAMESPACE_REQUEST$\Update$MODEL_NAME$Request;
use $BASE_CONTROLLER$ as BaseController;
use Illuminate\Database\Eloquent\ModelNotFoundException;

class $MODEL_NAME$Controller extends BaseController
{
    /**
     * Display a listing of the $MODEL_NAME$.
     *
     * @return Response
     */
    public function index()
    {
        bcs('');

        $$MODEL_NAME_PLURAL_CAMEL$ = $MODEL_NAME$::$RENDER_TYPE$;

        return view('$VIEW_PATH$$VIEW_FOLDER_NAME$.index', compact('$MODEL_NAME_PLURAL_CAMEL$'));
    }

    /**
     * Show the form for creating a new $MODEL_NAME$.
     *
     * @return Response
     */
    public function create()
    {
        bcs([]);

        return view('$VIEW_PATH$$VIEW_FOLDER_NAME$.create');
    }

    /**
     * Store a newly created $MODEL_NAME$ in storage.
     *
     * @param Create$MODEL_NAME$Request $request
     * @return Response
     */
    public function store(Create$MODEL_NAME$Request $request)
    {
        $input = $request->all();

        $MODEL_NAME$::create($input);
        
        Flash::success($MESSAGE_STORE$);
        
        return redirect(route('$ROUTE_PREFIX$$RESOURCE_URL$.index'));
    }

    /**
     * Show the specified $MODEL_NAME$.
     *
     * @param  int $id
     * @return Response
     */
    public function show($id)
    {
        bcs([]);

        $$MODEL_NAME_CAMEL$ = $this->exist($id);
        
        return view('$VIEW_PATH$$VIEW_FOLDER_NAME$.show')->with(compact('$MODEL_NAME_CAMEL$'));
    }

    /**
     * Show the form for editing the specified $MODEL_NAME$.
     *
     * @param  int $id
     * @return Response
     */
    public function edit($id)
    {
        bcs([]);
        
        $$MODEL_NAME_CAMEL$ = $this->exist($id);
        
        return view('$VIEW_PATH$$VIEW_FOLDER_NAME$.edit')->with(compact('$MODEL_NAME_CAMEL$'));
    }

    /**
     * Update the specified $MODEL_NAME$ in storage.
     *
     * @param  int $id
     * @param  Update$MODEL_NAME$Request $request
     * @return Response
     */
    public function update($id, Update$MODEL_NAME$Request $request)
    {
        $$MODEL_NAME_CAMEL$ = $this->exist($id);

        $$MODEL_NAME_CAMEL$->fill($request->all());

        $$MODEL_NAME_CAMEL$->save();

        Flash::success($MESSAGE_UPDATE$);

        return redirect(route('$ROUTE_PREFIX$$RESOURCE_URL$.index'));
    }

    /**
     * Remove the specified $MODEL_NAME$ from storage.
     *
     * @param  int $id
     * @return Response
     */
    public function destroy($id)
    {
        $$MODEL_NAME_CAMEL$ = $this->exist($id);

        $$MODEL_NAME_CAMEL$->delete();

        Flash::success($MESSAGE_DELETE$);

        return redirect(route('$ROUTE_PREFIX$$RESOURCE_URL$.index'));
    }

    /**
     * Check if a record exists.
     *
     * @param  int $id
     * @return Eloquent
     */
    private function exist($id)
    {
        try {
            $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::findOrFail($id);
        } catch (ModelNotFoundException $e) {
            Flash::error($MESSAGE_NOT_FOUND$);

            return redirect(route('$ROUTE_PREFIX$$RESOURCE_URL$.index'));
        }

        return $$MODEL_NAME_CAMEL$;
    }
}
